PROJECTNAME=particle_test
SRC_ROOT=..
IS_LIBRARY_PROJECT=0
OWN_HEADER_PATH=.
DEPEND_ON=



# {
# BEGIN YS Standard NMAKE MAKEFILE HEADER 20140801 >>
#
# Variable PROJECTNAME must be defined before the header.
# Variable IS_LIBRARY_PROJECT must be set 0 or 1
#

!IFNDEF IS_LIBRARY_PROJECT
!ERROR IS_LIBRARY_PROJECT not defined.
!ENDIF

!IFNDEF PROJECTNAME
!ERROR PROJECTNAME not defined.
!ENDIF

!IFNDEF SRC_ROOT
!ERROR SRC_ROOT not defined.
!ENDIF

!IFNDEF LINKSUBSYS
LINKSUBSYS=CONSOLE
!ENDIF

CC=cl
INCOPT=/I
LIBPREFIX=
LIBEXT=.lib
RM=del
MD=mkdir
CP=copy
LIBEXE=lib.exe
MAKEEXE=nmake -nologo
C_OPTION_AVAILABLE=0
SLASH=\
CHAIN=&
PLATFORM=windows

!IFNDEF BITNESSARCH

BITNESSUTIL=ys_temp_util_sizeofpointer
BITNESSUTILCPP=$(BITNESSUTIL).cpp
BITNESSUTILEXE=$(BITNESSUTIL).exe

!IF [@echo int main(void){return sizeof(void *);} > $(BITNESSUTILCPP)]==0
!MESSAGE Created $(BITNESSUTILCPP)
!ELSE
!ERROR Cannot create $(BITNESSUTILCPP)
!ENDIF

!IF [@cl.exe /nologo $(BITNESSUTILCPP)]==0
!MESSAGE Compiled $(BITNESSUTILCPP)
!ELSE
!ERROR Cannot compile bitness identifier!
!ENDIF

!IF [$(BITNESSUTILEXE)]==4
!MESSAGE Detected 32-bit compiler
BITNESS=32
BITNESSARCH=win32
!ELSEIF [$(BITNESSUTILEXE)]==8
!MESSAGE Detected 64-bit compiler
BITNESS=64
BITNESSARCH=win64
!ELSE
!ERROR Cannot identify bitness
!ENDIF

!IF [del $(BITNESSUTIL).*]==0
!ENDIF

!ENDIF
#Closing IFNDEF BITNESSARCH



!IF "$(BITNESSARCH)"=="win32"
SYSTEMID=5.01
LINKMACHINE=/MACHINE:X86
!ELSEIF "$(BITNESSARCH)"=="win64"
SYSTEMID=5.02
LINKMACHINE=/MACHINE:x64
!ELSE
!ERROR Unknown bitness-architecture.
!ENDIF



!IFDEF USERLIBDIR
#!MESSAGE User Library Directory=$(USERLIBDIR)
!ELSE
!MESSAGE Environment variable USERLIBDIR is not defined.  Default to C:\lib
USERLIBDIR=C:\lib
!ENDIF

!IFDEF USERINCDIR
#!MESSAGE User Include Directory=$(USERINCDIR)
!ELSE
!MESSAGE Environment variable USERINCDIR is not defined.  Default to C:\include
USERINCDIR=C:\include
!ENDIF



!IFDEF USEROBJDIR
#!MESSAGE User Object Directory=$(USEROBJDIR)
!ELSE
!MESSAGE Environment variable USEROBJDIR is not defined.  Default to C:\tmp\obj
USEROBJDIR=C:\tmp\obj
!ENDIF



OBJDIR=$(USEROBJDIR)\$(BITNESSARCH)\$(PROJECTNAME)
LIBDIR=$(USERLIBDIR)\$(BITNESSARCH)
BINDIR=.\bin\$(BITNESSARCH)
PDBFILE=$(OBJDIR)\$(PROJECTNAME).pdb
PCHFILE=$(OBJDIR)\$(PROJECTNAME).pch
#
# END YS Standard NMAKE MAKEFILE HEADER <<
# }



RUNTIMEDIR=.



APPTARGET=$(RUNTIMEDIR)\$(PROJECTNAME).exe
LIBTARGET="$(LIBDIR)\$(PROJECTNAME).lib"

!IF $(IS_LIBRARY_PROJECT)==0
TARGET=$(APPTARGET)
!ELSE
TARGET=$(LIBTARGET)
!ENDIF


# ADDITIONAL_INCLUDE_PATH, ADDITIONAL_LIBRARIES, and NOT_ADDED_TO_ADDITIONAL_LIBRARIES will be updated from YS makefile management tools.
ADDITIONAL_INCLUDE_PATH=

ADDITIONAL_LIBRARIES=

NOT_ADDED_TO_ADDITIONAL_LIBRARIES=

# UNMANAGED_INCLUDE_PATH and UNMANAGED_LIBRARIES won't be updated from YS makefile management tools. These should be manually maintained.
UNMANAGED_INCLUDE_PATH=/I \trunk\src\ysclass\src /I ..\fssimplewindow /I ..\MCG03

UNMANAGED_LIBRARIES=$(LIBDIR)\ysclass.lib


# Architecture (/MT, /MD, /MTD, etc.) needs to match with the library.  Use this setting.
CFLAGS=/nologo /c /W4 /Zi /DWIN32 /O2 /MT /Fd$(PDBFILE) /Fp$(PCHFILE) /wd4996 $(UNMANAGED_INCLUDE_PATH) $(ADDITIONAL_INCLUDE_PATH)



LINKSYS=/SUBSYSTEM:$(LINKSUBSYS),$(SYSTEMID)



HEADERS=



OBJS= $(OBJDIR)\main.obj $(OBJDIR)\fssimplewindowcommon.obj $(OBJDIR)\fswin32keymap.obj $(OBJDIR)\fswin32winmain.obj $(OBJDIR)\fswin32wrapper.obj $(OBJDIR)\Cylinder.obj $(OBJDIR)\Particle.obj $(OBJDIR)\ParticleSimulation.obj $(OBJDIR)\SmoothingKernel.obj $(OBJDIR)\Gradation.obj $(OBJDIR)\Box.obj $(OBJDIR)\Quaternion.obj $(OBJDIR)\Hose.obj $(OBJDIR)\Ship.obj $(OBJDIR)\DrawMesh.obj



LFLAGS=$(UNMANAGED_LIBRARIES) $(ADDITIONAL_LIBRARIES) opengl32.lib glu32.lib



all : dependencies $(TARGET)

targetonly : $(TARGET)

dependencies :

clean_dependencies :

clean_self :
	$(RM) $(OBJS)
	$(RM) $(TARGET)
	$(RM) *.pdb

cln : clean_dependencies clean_self

clnlight : clean_self



$(LIBTARGET) : $(HEADERS) $(OBJDIR) $(LIBDIR) $(OBJS)
		$(LIBEXE) @<<
	$(LIBFLAGS) /OUT:"$(LIBTARGET)" $(OBJS)
<<



run :
	nmake -nologo -f makefile.win
	$(APPTARGET)



$(APPTARGET) : $(OBJDIR) $(OBJS) $(UNMANAGED_LIBRARIES) $(ADDITIONAL_LIBRARIES)
	$(CC) /Fe$(APPTARGET) $(OBJS) $(LFLAGS) /link $(LINKSYS) $(LINKMACHINE)



$(OBJDIR) :
	$(MD) $(OBJDIR)



$(LIBDIR) :
	$(MD) $(LIBDIR)



inst :
	$(CP) $(LIBTARGET) $(LIBDIR)



rebuild:
	nmake -f makefile.win cln
	nmake -f makefile.win $(TARGET)



#Per source
#$(OBJDIR)\.obj : .cpp
#	$(CC) $? $(CFLAGS) /Fo$@

$(OBJDIR)\main.obj : main.cpp
	$(CC) main.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\main.obj

$(OBJDIR)\fssimplewindowcommon.obj : ..\fssimplewindow\fssimplewindowcommon.cpp
	$(CC) ..\fssimplewindow\fssimplewindowcommon.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\fssimplewindowcommon.obj

$(OBJDIR)\fswin32keymap.obj : ..\fssimplewindow\windows\fswin32keymap.cpp
	$(CC) ..\fssimplewindow\windows\fswin32keymap.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\fswin32keymap.obj

$(OBJDIR)\fswin32winmain.obj : ..\fssimplewindow\windows\fswin32winmain.cpp
	$(CC) ..\fssimplewindow\windows\fswin32winmain.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\fswin32winmain.obj

$(OBJDIR)\fswin32wrapper.obj : ..\fssimplewindow\windows\fswin32wrapper.cpp
	$(CC) ..\fssimplewindow\windows\fswin32wrapper.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\fswin32wrapper.obj

$(OBJDIR)\Cylinder.obj : ..\MCG03\Cylinder.cpp
	$(CC) ..\MCG03\Cylinder.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\Cylinder.obj

$(OBJDIR)\Particle.obj : ..\MCG03\Particle.cpp
	$(CC) ..\MCG03\Particle.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\Particle.obj

$(OBJDIR)\ParticleSimulation.obj : ..\MCG03\ParticleSimulation.cpp
	$(CC) ..\MCG03\ParticleSimulation.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\ParticleSimulation.obj

$(OBJDIR)\SmoothingKernel.obj : ..\MCG03\SmoothingKernel.cpp
	$(CC) ..\MCG03\SmoothingKernel.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\SmoothingKernel.obj

$(OBJDIR)\Gradation.obj : ..\MCG03\Gradation.cpp
	$(CC) ..\MCG03\Gradation.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\Gradation.obj

$(OBJDIR)\Box.obj : ..\MCG03\Box.cpp
	$(CC) ..\MCG03\Box.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\Box.obj

$(OBJDIR)\Quaternion.obj : ..\MCG03\Quaternion.cpp
	$(CC) ..\MCG03\Quaternion.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\Quaternion.obj

$(OBJDIR)\Hose.obj : ..\MCG03\Hose.cpp
	$(CC) ..\MCG03\Hose.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\Hose.obj

$(OBJDIR)\Ship.obj : ..\MCG03\Ship.cpp
	$(CC) ..\MCG03\Ship.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\Ship.obj

$(OBJDIR)\DrawMesh.obj : ..\MCG03\DrawMesh.cpp
	$(CC) ..\MCG03\DrawMesh.cpp $(CPPFLAGS) $(CFLAGS) /Fo$(OBJDIR)\DrawMesh.obj
